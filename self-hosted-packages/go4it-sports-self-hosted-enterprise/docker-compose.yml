
version: '3.8'

services:
  app:
    build: 
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://go4it:go4it123@postgres:5432/go4it_sports
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./config/app.env:/app/.env
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=go4it_sports
      - POSTGRES_USER=go4it
      - POSTGRES_PASSWORD=go4it123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped


  ai-server:
    build:
      context: ./ai-models
      dockerfile: Dockerfile
    ports:
      - "3456:3456"
    environment:
      - AI_PACKAGE=premium
    volumes:
      - ai_models_data:/app/models
    restart: unless-stopped


volumes:
  postgres_data:
  redis_data:
  ai_models_data:
