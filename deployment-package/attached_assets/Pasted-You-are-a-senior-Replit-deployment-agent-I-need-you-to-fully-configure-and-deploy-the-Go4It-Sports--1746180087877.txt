You are a senior Replit deployment agent. I need you to fully configure and deploy the Go4It Sports site (go4itsports.org) with the following goals:

1. **STACK OVERVIEW:**
   - Frontend: Vite + React + Tailwind (in `client/`)
   - Backend: Node.js (Express, API in `server/`)
   - Database: PostgreSQL (connect via `db.ts`)
   - PM2 for process management
   - NGINX for reverse proxy
   - HTTPS via Certbot (Let's Encrypt)
   - Directory root: `/var/www/go4itsports`

2. **TASKS TO COMPLETE:**
   - Check that `/server/index.js` or the actual backend entry exists and matches the ecosystem config.
   - Ensure `ecosystem.config.js` is valid and points to the correct entry script for the backend.
   - Ensure all node modules are installed (`npm install`) for both `client` and `server`.
   - Build the frontend (`npm run build` or `vite build`).
   - Confirm that the build output exists at `client/dist/`.
   - Ensure PM2 is managing `go4it-api` with correct logs and process health.
   - Verify NGINX config is pointing to `client/dist` and reverse proxying API to `/api` or appropriate route.
   - Validate all necessary `.env` variables are present.
   - Check port conflicts (e.g., 5000, 8080, 80) and update PM2/Nginx config accordingly.

3. **ERRORS TO RESOLVE:**
   - PM2: Cannot find module `/server/index.js` → fix the script path or create that file.
   - PM2 ecosystem config malformed → rebuild a working version.
   - If `npm run start` or `pm2 start` fails, catch and report the full trace.

4. **DEPLOYMENT FINALIZATION:**
   - Restart PM2 services
   - Enable PM2 to run on reboot (`pm2 save`, `pm2 startup`)
   - Reload NGINX config (`sudo nginx -t`, `sudo systemctl reload nginx`)
   - Ensure HTTPS is active (`certbot` if not)
   - Test public access to both `go4itsports.org` and its API.

BONUS: Optimize logs, confirm permissions (`chmod 755`, `chown www-data:www-data`), and clean up any duplicate files/folders in `/var/www/go4itsports`.

Goal: When completed, go4itsports.org should load the frontend, serve the backend API, and be live and functional with all errors resolved.