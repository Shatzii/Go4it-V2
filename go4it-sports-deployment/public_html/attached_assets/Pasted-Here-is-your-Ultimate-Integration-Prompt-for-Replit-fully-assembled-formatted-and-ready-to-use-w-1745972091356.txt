Here is your Ultimate Integration Prompt for Replit — fully assembled, formatted, and ready to use with Replit AI or any dev assistant. This ties together StarCoder, Monaco Editor, your launcher panel, and the File Browser upload system into a single deploy-ready pipeline.

⸻

Ultimate Go4It x Replit Integration Prompt

Prompt Title:
“Integrate Go4It Launcher with Replit Deploy, File Upload, Monaco Editor, and StarCoder AI Backend”

⸻

Overview

I’m building the Go4ItSports.org site. My server is already configured with:
	•	A real server environment with NGINX and full root access
	•	A working File Browser that uploads files to /var/www/go4itsports/uploads/temp/
	•	A custom Monaco Editor instance running on the /pharaoh/ path
	•	A deployed StarCoder AI model (codellama:13b-8bit) via Ollama at http://localhost:11434/v1
	•	A launcher interface called G4T_LHR.html that initiates deployment, rollback, and AI support

⸻

What I Want Replit to Do

✅ 1. Export Files as Deployable .zip
	•	I need Replit to output my project (cleaned of .replit, .git, etc.) into a single .zip file named:

Go4It_Package.zip


	•	Either download it locally, or automatically upload it to:

http://[server]/uploads/temp/



⸻

✅ 2. Trigger Deployment Script on Server

After the .zip is uploaded, I need Replit (or myself) to trigger:

bash /var/www/go4itsports/deploy.sh Go4It_Package.zip

This should:
	•	Extract the zip
	•	Move files into /client, /server, and /shared
	•	Create a snapshot of the current state in /backups/
	•	Log the process

⸻

✅ 3. Connect to Monaco Editor + StarCoder

Provide a button in Replit or link that opens:

http://188.245.209.124/pharaoh/

This Monaco Editor includes:
	•	Real-time file editing (from /go4itsports/)
	•	Integrated StarCoder AI via JS API
	•	Keyboard Shortcuts:
	•	Ctrl+Shift+F → Auto-fix code
	•	Ctrl+Shift+Q → Ask code questions
	•	Ctrl+Shift+A → Run AI audit on folder/file

⸻

✅ 4. Support Rollback

Automatically snapshot project folders before deploying:

/var/www/go4itsports/backups/

Restore with:

bash /var/www/go4itsports/restore_last.sh



⸻

✅ 5. (Optional) StarCoder AI Auto-Fix

If files are missing (e.g. package.json, index.ts, etc.), the script:

verify_structure.sh

Should use StarCoder to suggest or generate missing code. Example:

curl -X POST http://localhost:11434/v1/chat/completions \
-d '{ "prompt": "Fix the Go4It folder structure to match project requirements." }'



⸻

Server Structure

/var/www/go4itsports/
├── client/
├── server/
├── shared/
├── uploads/
│   └── temp/
├── backups/
├── deploy.sh
├── restore_last.sh
├── verify_structure.sh
├── monaco_integration.js
└── G4T_LHR.html



⸻

Integrate With Replit Like This
	1.	Pre-deploy Build Script in .replit:

zip -r Go4It_Package.zip . -x '*.git*' '*.replit*' 'node_modules/*'


	2.	Optional webhook or SFTP upload to server:
	•	Upload Go4It_Package.zip to /uploads/temp/
	•	Or use a CURL POST to trigger deployment
	3.	Provide quick launch links:
	•	Deploy: http://188.245.209.124/G4T_LHR.html
	•	Edit: http://188.245.209.124/pharaoh/

⸻

Conclusion

This integration allows me to:
	•	Build in Replit
	•	Upload via FileBrowser or Replit
	•	Deploy with rollback + AI code review
	•	Edit live files via Monaco + StarCoder
	•	Maintain full backend control

⸻

Would you like this saved as a downloadable .md file or ready-to-import .zip with scripts + launcher pre-bundled?