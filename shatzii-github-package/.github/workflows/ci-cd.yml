name: Shatzii AI Platform CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: shatzii_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run TypeScript compilation
      run: npm run build

    - name: Run linting
      run: npm run lint --if-present

    - name: Run tests
      run: npm test --if-present
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/shatzii_test
        JWT_SECRET: test-jwt-secret-for-ci
        SESSION_SECRET: test-session-secret-for-ci

    - name: Build production
      run: npm run build
      env:
        NODE_ENV: production

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: npm audit --audit-level high

    - name: Check for vulnerabilities
      uses: snyk/actions/node@master
      continue-on-error: true
      with:
        args: --severity-threshold=high
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  deploy-staging:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Railway Staging
      uses: railway-deploy@v1
      with:
        service: shatzii-staging
        token: ${{ secrets.RAILWAY_TOKEN }}

  deploy-production:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build production
      run: npm run build
      env:
        NODE_ENV: production

    - name: Deploy to Railway Production
      uses: railway-deploy@v1
      with:
        service: shatzii-production
        token: ${{ secrets.RAILWAY_TOKEN }}

    - name: Notify deployment success
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: 'Shatzii AI Platform successfully deployed to production! üöÄ'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      if: success()

    - name: Notify deployment failure
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: 'Shatzii AI Platform deployment failed! ‚ùå'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      if: failure()

  performance-test:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './lighthouse.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

    - name: Run load tests
      run: |
        npm install -g artillery
        artillery run load-tests/api-load-test.yml
      continue-on-error: true